<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms on BECKS BLOG</title>
    <link>https://www.maoyizhou.com/categories/algorithms/</link>
    <description>Recent content in Algorithms on BECKS BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Yizhou Mao</copyright>
    <lastBuildDate>Fri, 10 Jan 2020 01:52:44 -0500</lastBuildDate>
    
	<atom:link href="https://www.maoyizhou.com/categories/algorithms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Sort</title>
      <link>https://www.maoyizhou.com/post/sort/</link>
      <pubDate>Fri, 10 Jan 2020 01:52:44 -0500</pubDate>
      
      <guid>https://www.maoyizhou.com/post/sort/</guid>
      <description>Quick Sort Algorithm utilizes the idea of Divide-and-Conquer. It picks a pivot from the array and then partition items around the pivot in the array. Recursively repeat this process until all subarrays have been partitioned. $ _{[1]} $
What is Quick Sort? Quick Sort is commonly used in Computer Science when required to deal with in-memory sorting problems. Two main actions taken in quick sort are swap() and partition(). The main idea of quick sort is Divide-and-Conquer.</description>
    </item>
    
  </channel>
</rss>