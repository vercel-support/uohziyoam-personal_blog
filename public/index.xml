<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BECKS BLOG</title>
    <link>https://www.maoyizhou.com/</link>
    <description>Recent content on BECKS BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Yizhou Mao</copyright>
    <lastBuildDate>Fri, 10 Jan 2020 01:52:44 -0500</lastBuildDate>
    
	<atom:link href="https://www.maoyizhou.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Sort</title>
      <link>https://www.maoyizhou.com/post/sort/</link>
      <pubDate>Fri, 10 Jan 2020 01:52:44 -0500</pubDate>
      
      <guid>https://www.maoyizhou.com/post/sort/</guid>
      <description>Quick Sort Algorithm utilizes the idea of Divide-and-Conquer. It picks a pivot from the array and then partition items around the pivot in the array. Recursively repeat this process until all subarrays have been partitioned. $ _{[1]} $
What is Quick Sort? Quick Sort is commonly used in Computer Science when required to deal with in-memory sorting problems. Two main actions taken in quick sort are swap() and partition(). The main idea of quick sort is Divide-and-Conquer.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.maoyizhou.com/post/about/</link>
      <pubDate>Sun, 05 Jan 2020 01:52:44 -0500</pubDate>
      
      <guid>https://www.maoyizhou.com/post/about/</guid>
      <description>About Me Currently studying Computer Science in Boston University.
Email: uohziyoam@hotmail.com</description>
    </item>
    
    <item>
      <title>Non-linear Classification</title>
      <link>https://www.maoyizhou.com/post/intro-to-nn/</link>
      <pubDate>Tue, 12 Mar 2019 01:52:44 -0500</pubDate>
      
      <guid>https://www.maoyizhou.com/post/intro-to-nn/</guid>
      <description>Source Code: https://github.com/uohziyoam/Intro-to-NN
 Problem Definition In this context, it requires us to generate a non-linear classification by utilizing neural network to fit in our model.  Experiments In my experiments, I followed the instruction about data method by using 5-fold round robin cross-validation. The data were didvided into five sets, and choose four of them as training set and rest of them as testing set. The program repeatedtly train the model five times with randomly choosed set from original 2000 data points.</description>
    </item>
    
    <item>
      <title>Word Puzzle - 连词达人</title>
      <link>https://www.maoyizhou.com/post/word-puzzlie/</link>
      <pubDate>Tue, 05 Feb 2019 01:52:44 -0500</pubDate>
      
      <guid>https://www.maoyizhou.com/post/word-puzzlie/</guid>
      <description>Source Code: https://github.com/uohziyoam/WordConnectingGame Q: Briefly talk about the game Word Puzzle. A: Randomly generate certain numbers of white squares based on three or four different words. Each word has a common letter shared with other words. The game itself requires the users to fill out the blank areas with the corresponding words. Q: What is the gameplay of Word Puzzle? A: Q: How to set difficulties for each level? A:</description>
    </item>
    
    <item>
      <title>Knowledge·Difficulty·Value</title>
      <link>https://www.maoyizhou.com/post/knowledge-difficulty-value/</link>
      <pubDate>Tue, 20 Dec 2016 01:52:44 -0500</pubDate>
      
      <guid>https://www.maoyizhou.com/post/knowledge-difficulty-value/</guid>
      <description>Based on Knowledge.
 Introduction The above statement is based on a belief that some types of knowledge are more difficult to produce than others. In order to evaluate this statement, the meaning of “difficult” must be defined in relation to knowledge production. Many types of knowledge, such as advanced scientific discoveries, can be defined as “difficult” to produce due to the facts that they require vast amounts of material resources to produce and are built upon centuries’ worth of prior knowledge.</description>
    </item>
    
  </channel>
</rss>